# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "ic_main",
    srcs = ["ic_main.cc"],
    data = [
        "//ic_impl/data",
    ],
    deps = [
        ":party",
        "@com_github_gflags_gflags//:gflags",
    ],
)

cc_library(
    name = "party",
    srcs = ["party.cc"],
    hdrs = ["party.h"],
    deps = [
        ":factory",
    ]
)

cc_library(
    name = "factory",
    hdrs = ["factory.h"],
    srcs = [
        "factory_psi_v2.cc",
        "factory_lr.cc"
    ],
    deps = [
        "//ic_impl/algo/psi/v2:psi_handler_v2",
        "//ic_impl/algo/lr:lr_handler",
    ]
)

cc_library(
    name = "handler",
    srcs = ["handler.cc"],
    hdrs = ["handler.h"],
    deps = [
        ":context",
        ":status",
        ":psi_cc_proto",
    ]
)

cc_library(
    name = "context",
    srcs = ["context.cc"],
    hdrs = ["context.h"],
    deps = [
        "util",
        ":handshake_cc_proto",
    ]
)

cc_library(
    name = "util",
    srcs = ["util.cc"],
    hdrs = ["util.h"],
    deps = [
        "@yacl//yacl/base:exception",
        "@yacl//yacl/link:factory",
        "@com_google_absl//absl/strings",
        "@com_github_nlohmann_json//:json",
    ],
)

cc_library(
    name = "status",
    srcs = ["status.cc"],
    hdrs = ["status.h"],
    deps = [
        ":handshake_cc_proto"
    ],
)

cc_library(
    name = "common",
    deps = [
        ":handshake_cc_proto",
        ":psi_cc_proto",
        "@yacl//yacl/base:exception",
    ]
)

cc_proto_library(
    name = "handshake_cc_proto",
    deps = ["@org_interconnection//interconnection/handshake"],
)

cc_proto_library(
    name = "psi_cc_proto",
    deps = ["@org_interconnection//interconnection/legacy/algos"],
)
